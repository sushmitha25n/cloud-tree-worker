name = "image-worker"
main = "src/image.js"
compatibility_date = "2023-10-16"

# Variable bindings. These are arbitrary, plaintext strings (similar to environment variables)
# Note: Use secrets to store sensitive data.
# Docs: https://developers.cloudflare.com/workers/platform/environment-variables
# [vars]
#MY_TEST_BUCKET = "cloudtree-local-dev"
#MY_PROD_BUCKET = "cloudtree-country-flag"

account_id = "81fa1fae9afea338d6dc2158ca7627f3"
workers_dev = true

#[[routes]]
#pattern = "*.cloudtree.online/secure"
#script =  "src/index.js"

#[[routes]]
#pattern = "*.cloudtree.online/secure/*"
#zone_name = "cloudtree.online"
#script =  "src/image.js


#routes = [
#	{ pattern = "*.cloudtree.online/secure/*", zone_name = "cloudtree.online" }
#]


#node_compat = true



# Bind a KV Namespace. Use KV as persistent storage for small key-value pairs.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/kv
#[[kv_namespaces]]
#binding = "sush_dev"
#id = "c81e01e66960493aa54726bab564eb80"
#preview_id = "d99f928ce1ef4b0d8022352ea6e46da8"

#[[kv.namespaces.production]]
#binding = "sush_dev"
#id = "c81e01e66960493aa54726bab564eb80"

#[[kv_namespaces.preview]]
#binding = "sush_local_dev"
#preview_id = "d99f928ce1ef4b0d8022352ea6e46da8"

kv_namespaces = [
    { binding = "sush_dev", id = "c81e01e66960493aa54726bab564eb80", preview_id = "d99f928ce1ef4b0d8022352ea6e46da8" }
]

# Bind an R2 Bucket. Use R2 to store arbitrarily large blobs of data, such as files.
# Docs: https://developers.cloudflare.com/r2/api/workers/workers-api-usage/
[[r2_buckets]]
binding = "MY_BUCKET"
bucket_name = "cloudtree-country-flag"
preview_bucket_name = "cloudtree-local-dev"

#r2_buckets = [
#    { binding = "MY_BUCKET", bucket_name ="cloudtree-country-flag", preview_bucket_name = "cloudtree-local-dev" }
#]


# Bind a Queue producer. Use this binding to schedule an arbitrary task that may be processed later by a Queue consumer.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.producers]]
# binding = "MY_QUEUE"
# queue = "my-queue"

# Bind a Queue consumer. Queue Consumers can retrieve tasks scheduled by Producers to act on them.
# Docs: https://developers.cloudflare.com/queues/get-started
# [[queues.consumers]]
# queue = "my-queue"

# Bind another Worker service. Use this binding to call another Worker without network overhead.
# Docs: https://developers.cloudflare.com/workers/platform/services
# [[services]]
# binding = "MY_SERVICE"
# service = "my-service"

# Bind a Durable Object. Durable objects are a scale-to-zero compute primitive based on the actor model.
# Durable Objects can live for as long as needed. Use these when you need a long-running "server", such as in realtime apps.
# Docs: https://developers.cloudflare.com/workers/runtime-apis/durable-objects
# [[durable_objects.bindings]]
# name = "MY_DURABLE_OBJECT"
# class_name = "MyDurableObject"

# Durable Object migrations.
# Docs: https://developers.cloudflare.com/workers/learning/using-durable-objects#configure-durable-object-classes-with-migrations
# [[migrations]]
# tag = "v1"
# new_classes = ["MyDurableObject"]

